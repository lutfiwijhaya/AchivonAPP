/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package HumanResource;

import com.lowagie.text.Table;
import com.lowagie.text.xml.simpleparser.EntitiesToSymbol;
import static java.awt.PageAttributes.MediaType.D;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import CustomResource.actiontable;
import CustomResource.callrender;
import CustomResource.celleditor;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author hi
 */
public class CandidateList extends javax.swing.JPanel {
    Statement stm;
    ResultSet rs;
    Connection koneksi;
    JasperReport jasperreport;
    JasperDesign jasperdesign;
    JasperPrint jasperprint;
    Map<String, Object> param = new HashMap<String, Object>();
    DefaultTableModel myModel;
     String id = null;
 
  
    
    
    public CandidateList() {
        Statement stm;
        ResultSet rs;
        Connection koneksi;
        initComponents();
        settable();
        myShow();
        MyWindow();
        remove();
         
        
       
        
     
    }
void  settable (){
String [] header = {"id","KTP", "Nama", "Tempat, Tanggal Lahir", "Jenis Kelamin", "Marital Status", "Email", "No. Hp", "Job Applying", "Sallary","Action"};
         myModel = new DefaultTableModel(header,0);
        MyTable.setModel(myModel);
         actiontable event = new actiontable() {
            @Override
            public void lihat(int row) {
                try {
                    String tnama = (String) MyTable.getValueAt(row, 1);
                    String email = (String) MyTable.getValueAt(row, 5);
                   id = (String) MyTable.getValueAt(row, 0);
                   
                    
                    Class.forName("com.mysql.jdbc.Driver");
Connection kon =DriverManager.getConnection("jdbc:mysql://localhost:3306/achivonapp","root","");
            File O = new File("C:\\Users\\USER\\JaspersoftWorkspace\\MyReports\\cdemployee.jrxml");
            jasperdesign = JRXmlLoader.load(O);
            param.clear();
            jasperreport = JasperCompileManager.compileReport(jasperdesign);
          
               param.put("id",id);
             
            jasperprint = JasperFillManager.fillReport(jasperreport, param, kon);
            
            JasperViewer.viewReport(jasperprint, false);
        } catch (Exception e) {
            e.printStackTrace();
        }   
            
            }

            @Override
            public void tambah(int row) {
                System.out.println("tambah");
            }

            @Override
            public void hapus(int row) {
                System.out.println("hapus");
            }
        };
        MyTable.getColumnModel().getColumn(10).setCellRenderer(new callrender());
        MyTable.getColumnModel().getColumn(10).setPreferredWidth(120);
        MyTable.getColumnModel().getColumn(1).setPreferredWidth(130);
        MyTable.getColumnModel().getColumn(10).setPreferredWidth(150);
         MyTable.getColumnModel().getColumn(0).setPreferredWidth(0);
        MyTable.getColumnModel().getColumn(10).setCellEditor(new celleditor(event));
        
}


void remove (){ 
    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        textSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        MyTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(900, 585));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSearchActionPerformed(evt);
            }
        });
        textSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textSearchKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textSearchKeyTyped(evt);
            }
        });
        jPanel1.add(textSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 350, -1));

        MyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        MyTable.setAutoResizeMode(0);
        MyTable.setRowHeight(40);
        MyTable.setShowHorizontalLines(true);
        MyTable.setShowVerticalLines(true);
        jScrollPane1.setViewportView(MyTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 860, 170));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel1.setText("Daftar kandidat / Candidate List");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 240, 40));

        jSeparator1.setBackground(new java.awt.Color(255, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, 630, 20));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Logo.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, -1));

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSearchKeyTyped

    }//GEN-LAST:event_textSearchKeyTyped

    private void textSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSearchKeyPressed
        myShow();
    }//GEN-LAST:event_textSearchKeyPressed

    private void textSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable MyTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField textSearch;
    // End of variables declaration//GEN-END:variables

    private void myShow() {
        Connection myConn;
        String mySearch = textSearch.getText();
        int row = MyTable.getRowCount();
        for(int i = 0; i < row; i++){
            myModel.removeRow(0);
        }
        if (mySearch != null) {
            try {
            myConn = DriverManager.getConnection("jdbc:mysql://localhost/achivonapp", "root", "");
            ResultSet myRess = myConn.createStatement().executeQuery("SELECT * FROM cd_employee WHERE nama LIKE '%"+mySearch+"%'");
            while (myRess.next()) {
                
                String myData [] = {myRess.getString(1),myRess.getString(3), myRess.getString(2), myRess.getString(7)+","+myRess.getString(8), 
                                    myRess.getString(6),myRess.getString(9) ,myRess.getString(4), 
                                    myRess.getString(10), myRess.getString(12), myRess.getString(13)};
                
                myModel.addRow(myData);
           
            }
            } catch (SQLException ex) {
                Logger.getLogger(CandidateList.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            try {
                myConn = DriverManager.getConnection("jdbc:mysql://localhost/achivonapp", "root", "");
                ResultSet myRess = myConn.createStatement().executeQuery("SELECT * FROM cd_employee");
                while (myRess.next()) {
                    
                    String myData [] = {myRess.getString(1),myRess.getString(3), myRess.getString(2), myRess.getString(7)+","+myRess.getString(8), 
                                        myRess.getString(6),myRess.getString(9) ,myRess.getString(4), 
                                        myRess.getString(10), myRess.getString(12), myRess.getString(13)};
                    myModel.addRow(myData);
                
                }
               
            } catch (SQLException ex) {
                Logger.getLogger(CandidateList.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("javaapplication1.CandidateList.myShow()");
            }
        }
        
    }
    
    private void MyWindow(){
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(screen.width, screen.height - 45);
        this.setPreferredSize(screen);
    }
}
