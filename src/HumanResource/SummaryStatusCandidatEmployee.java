/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package HumanResource;

import CustomResource.koneksi;
import Main.MasterForm;
import com.raven.datechooser.SelectedDate;
import java.sql.Connection;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Collections;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import jnafilechooser.api.JnaFileChooser;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author USER
 */
public class SummaryStatusCandidatEmployee extends MasterForm {

    java.sql.Statement stm;
    ResultSet rs,rs1,rs2,rs3;
    Connection koneksi;
    
    public SummaryStatusCandidatEmployee() {
        initComponents();
        MyWindow();
        openDB();
        setTable();
        getData();
        jLabel2.setVisible(false);
        jLabel47.setVisible(false);
        jScrollPane6.getVerticalScrollBar().setUnitIncrement(16);
        
        ((DefaultTableCellRenderer)jTable1.getTableHeader().getDefaultRenderer())
        .setHorizontalAlignment(JLabel.CENTER);
        
        ((DefaultTableCellRenderer)jTable2.getTableHeader().getDefaultRenderer())
        .setHorizontalAlignment(JLabel.CENTER);
        
        ((DefaultTableCellRenderer)jTable3.getTableHeader().getDefaultRenderer())
        .setHorizontalAlignment(JLabel.CENTER);
        
        ((DefaultTableCellRenderer)jTable4.getTableHeader().getDefaultRenderer())
        .setHorizontalAlignment(JLabel.CENTER);
        
        ((DefaultTableCellRenderer)jTable5.getTableHeader().getDefaultRenderer())
        .setHorizontalAlignment(JLabel.CENTER);
    }
    
    private void openDB() {
        try {
            koneksi kon = new koneksi();
            koneksi = kon.getConnection();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "maaf, Tidak terhubung database");
        }
    }
    /**
     * seriously don't change anythings here
     * if you want to Modify this code please do this first
     * 1, sleep
     * 2, eat
     * 3, the last is surrender
     * you cant
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooser1 = new com.raven.datechooser.DateChooser();
        groupSallary = new javax.swing.ButtonGroup();
        jScrollPane6 = new scroolbarWin11.ScrollPaneWin11();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane1 = new scroolbarWin11.ScrollPaneWin11();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new scroolbarWin11.ScrollPaneWin11();
        jTable2 = new javax.swing.JTable();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane3 = new scroolbarWin11.ScrollPaneWin11();
        jTable3 = new javax.swing.JTable();
        jScrollPane4 = new scroolbarWin11.ScrollPaneWin11();
        jTable4 = new javax.swing.JTable();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jScrollPane5 = new scroolbarWin11.ScrollPaneWin11();
        jTable5 = new javax.swing.JTable();
        jLabel39 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jScrollPane7 = new scroolbarWin11.ScrollPaneWin11();
        jTable6 = new javax.swing.JTable();
        jLabel42 = new javax.swing.JLabel();
        jScrollPane8 = new scroolbarWin11.ScrollPaneWin11();
        jTable7 = new javax.swing.JTable();
        jLabel43 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jScrollPane9 = new scroolbarWin11.ScrollPaneWin11();
        jTable8 = new javax.swing.JTable();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        CandidateSallary = new CustomResource.CustomTextfield();
        CandidateName = new CustomResource.CustomTextfield();
        CandidateBirthday = new CustomResource.CustomTextfield();
        CandidateKTP = new CustomResource.CustomTextfield();
        CandidateEducation = new CustomResource.CustomTextfield();
        CandidatePhoneNumber = new CustomResource.CustomTextfield();
        CandidateEmail = new CustomResource.CustomTextfield();
        CandidateCareer = new CustomResource.CustomTextfield();
        CandidateGrade = new CustomResource.CustomTextfield();
        CandidatePosition = new CustomResource.CustomTextfield();
        CandidateMarital = new CustomResource.CustomTextfield();
        CandidateDiscipline = new CustomResource.CustomTextfield();
        CandidateGender = new CustomResource.CustomTextfield();
        CandidateAge = new CustomResource.CustomTextfield();
        CandidateReligion = new CustomResource.CustomTextfield();
        TypeHired = new CustomResource.CustomTextfield();
        HiredContract = new CustomResource.CustomTextfield();
        PositionID = new CustomResource.CustomTextfield();
        CompanyJoin = new CustomResource.CustomTextfield();
        ContractFinished = new CustomResource.CustomTextfield();
        ProbationPeriod = new CustomResource.CustomTextfield();
        WorkLocation = new CustomResource.CustomTextfield();
        Basic = new CustomResource.CustomTextfield();
        SiteAllowance = new CustomResource.CustomTextfield();
        Meal = new CustomResource.CustomTextfield();
        OTAllowance = new CustomResource.CustomTextfield();
        Transportation = new CustomResource.CustomTextfield();
        RoleAllowance = new CustomResource.CustomTextfield();
        Accomodation = new CustomResource.CustomTextfield();
        SundayHoliday = new CustomResource.CustomTextfield();
        HourlyRate = new CustomResource.CustomTextfield();
        jLabel4 = new javax.swing.JLabel();
        all = new CustomResource.RadioButtonCustom();
        hour = new CustomResource.RadioButtonCustom();
        buttonSelect = new javax.swing.JButton();

        dateChooser1.setForeground(new java.awt.Color(51, 51, 255));

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("SUMMARY STATUS CANDIDATES EMPLOYEE");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 40, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("A. CANDIDATE INFORMATION");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, -1, -1));

        jLabel34.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel34.setText("C. CHECK LIST - DOCUMENT SUBMISSION");
        jPanel1.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 680, -1, -1));

        jTable1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Island", null, null},
                {"State", null, null},
                {"City", null, null},
                {"District", null, null},
                {"Vilage", null, null}
            },
            new String [] {
                "Description", "Home", "Current"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 550, 350, 110));

        jTable2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Resume",  new Boolean(false)},
                {"KTP",  new Boolean(false)},
                {"Photo (5EA, 3.5 x 4.5cm)",  new Boolean(false)},
                {"SKCK",  new Boolean(false)},
                {"Academic Certificate",  new Boolean(false)},
                {"Career Certificate (Proof Stamp)",  new Boolean(false)},
                {"Self Introduction",  new Boolean(false)}
            },
            new String [] {
                "Before Hiring Announcement", "Receiving Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 700, 359, 150));

        jLabel35.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel35.setText("B. STATUS - FAMILY AND ADDRESS");
        jPanel1.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 510, -1, -1));

        jTable3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Grand Parent", null,  new Boolean(false)},
                {"Parent", null,  new Boolean(false)},
                {"Wife", null,  new Boolean(false)},
                {"Son", null,  new Boolean(false)},
                {"Daughter", null,  new Boolean(false)}
            },
            new String [] {
                "Description", "Number", "Accompany"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 550, 350, 110));

        jTable4.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Medical Check Up Result",  new Boolean(false)},
                {"Bank Account Information",  new Boolean(false)},
                {"Family Relation Certificate",  new Boolean(false)},
                {"TAX  ID Card (NPWP)",  new Boolean(false)},
                {"BPJS Ketenagakerjaan",  new Boolean(false)},
                {"BPJS Kesehatan",  new Boolean(false)},
                {"Family Contact Point & No",  new Boolean(false)}
            },
            new String [] {
                "After Hiring Announcement", "Receiving Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 700, 359, 150));

        jLabel37.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel37.setText("Address");
        jPanel1.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 560, -1, -1));

        jLabel38.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel38.setText("Family Status");
        jPanel1.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 530, -1, -1));

        jTable5.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Name Certificate", "Certificate Authority", "Certificate No.", "Certificate Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable5);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 890, 735, 90));

        jLabel39.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel39.setText("E. Initial Hired Status");
        jPanel1.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 1010, -1, -1));

        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 80, -1, -1));

        jLabel41.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel41.setText("F. Reward Status");
        jPanel1.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 1520, -1, -1));

        jTable6.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Reward Name", "Date", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTable6);

        jPanel1.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1540, 735, 90));

        jLabel42.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel42.setText("G. DISCIPLINARY STATUS");
        jPanel1.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 1660, -1, -1));

        jTable7.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Description", "Date", "Period (Start to Finish)", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(jTable7);

        jPanel1.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1680, 735, 90));

        jLabel43.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel43.setText("D. SUMMARY OF AUTHORIZED  SKILL CERTIFICATES ");
        jPanel1.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 870, -1, -1));

        jLabel21.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel21.setText("Sallary");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 1020, -1, -1));

        jLabel47.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel47.setText("and retirement (excluding reward and disciplinary action)");
        jPanel1.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 2120, -1, -1));

        jTable8.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Subject", "Start", "Finish", "Position", "Work Location or Project "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(jTable8);

        jPanel1.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1850, 735, 180));

        jLabel48.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel48.setText("H. CHRONOLOGY STATUS AS EMPLOYEE");
        jPanel1.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 1790, -1, -1));

        jLabel49.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel49.setText("Please record all of status each Subject such as hiring, promotion, change of job location, job relocation/movement, ");
        jPanel1.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1810, -1, -1));

        jLabel50.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel50.setText("and retirement (excluding reward and disciplinary action)");
        jPanel1.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1830, -1, -1));

        jButton1.setText("Save as");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 2050, 90, 30));

        jButton2.setText("add Row");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 1820, -1, -1));

        jButton3.setText("add Row");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 1510, -1, -1));

        jButton4.setText("add Row");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 860, -1, -1));

        jButton5.setText("add Row");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 1650, -1, -1));

        CandidateSallary.setDragEnabled(true);
        CandidateSallary.setInheritsPopupMenu(true);
        CandidateSallary.setLabelText("Expected Sallary");
        jPanel1.add(CandidateSallary, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 150, 280, -1));

        CandidateName.setLabelText("Candidate Name");
        jPanel1.add(CandidateName, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 150, 190, -1));

        CandidateBirthday.setLabelText("Birthday");
        CandidateBirthday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CandidateBirthdayActionPerformed(evt);
            }
        });
        jPanel1.add(CandidateBirthday, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, 190, -1));

        CandidateKTP.setLabelText("KTP No.");
        jPanel1.add(CandidateKTP, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, 280, -1));

        CandidateEducation.setInheritsPopupMenu(true);
        CandidateEducation.setLabelText("Last Education");
        jPanel1.add(CandidateEducation, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 280, -1));

        CandidatePhoneNumber.setDragEnabled(true);
        CandidatePhoneNumber.setInheritsPopupMenu(true);
        CandidatePhoneNumber.setLabelText("Mobile No.");
        CandidatePhoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CandidatePhoneNumberActionPerformed(evt);
            }
        });
        jPanel1.add(CandidatePhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 350, 280, -1));

        CandidateEmail.setDragEnabled(true);
        CandidateEmail.setInheritsPopupMenu(true);
        CandidateEmail.setLabelText("e-mail");
        jPanel1.add(CandidateEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 400, 280, -1));

        CandidateCareer.setDragEnabled(true);
        CandidateCareer.setInheritsPopupMenu(true);
        CandidateCareer.setLabelText("Career");
        jPanel1.add(CandidateCareer, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 450, 280, -1));

        CandidateGrade.setDragEnabled(true);
        CandidateGrade.setInheritsPopupMenu(true);
        CandidateGrade.setLabelText("Class Grade");
        jPanel1.add(CandidateGrade, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 350, 280, -1));

        CandidatePosition.setDragEnabled(true);
        CandidatePosition.setInheritsPopupMenu(true);
        CandidatePosition.setLabelText("Position");
        jPanel1.add(CandidatePosition, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 250, 280, -1));

        CandidateMarital.setDragEnabled(true);
        CandidateMarital.setInheritsPopupMenu(true);
        CandidateMarital.setLabelText("Mariage Status");
        jPanel1.add(CandidateMarital, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 300, 280, -1));

        CandidateDiscipline.setDragEnabled(true);
        CandidateDiscipline.setInheritsPopupMenu(true);
        CandidateDiscipline.setLabelText("Discipline");
        jPanel1.add(CandidateDiscipline, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 200, 280, -1));

        CandidateGender.setLabelText("Gender");
        CandidateGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CandidateGenderActionPerformed(evt);
            }
        });
        jPanel1.add(CandidateGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 150, 80, -1));

        CandidateAge.setLabelText("Age (years)");
        CandidateAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CandidateAgeActionPerformed(evt);
            }
        });
        jPanel1.add(CandidateAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 200, 80, -1));

        CandidateReligion.setDragEnabled(true);
        CandidateReligion.setInheritsPopupMenu(true);
        CandidateReligion.setLabelText("Religion");
        jPanel1.add(CandidateReligion, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 400, 280, -1));

        TypeHired.setText("Permanent");
        TypeHired.setDragEnabled(true);
        TypeHired.setInheritsPopupMenu(true);
        TypeHired.setLabelText("Type of Hired");
        jPanel1.add(TypeHired, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1040, 280, -1));

        HiredContract.setDragEnabled(true);
        HiredContract.setInheritsPopupMenu(true);
        HiredContract.setLabelText("Hired Contract No.");
        HiredContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HiredContractActionPerformed(evt);
            }
        });
        jPanel1.add(HiredContract, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1140, 280, -1));

        PositionID.setDragEnabled(true);
        PositionID.setInheritsPopupMenu(true);
        PositionID.setLabelText("Position ID No.");
        PositionID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PositionIDActionPerformed(evt);
            }
        });
        jPanel1.add(PositionID, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1190, 280, -1));

        CompanyJoin.setDragEnabled(true);
        CompanyJoin.setInheritsPopupMenu(true);
        CompanyJoin.setLabelText("Company Join Date");
        CompanyJoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompanyJoinActionPerformed(evt);
            }
        });
        jPanel1.add(CompanyJoin, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1240, 280, -1));

        ContractFinished.setDragEnabled(true);
        ContractFinished.setInheritsPopupMenu(true);
        ContractFinished.setLabelText("Contract Finish Date");
        ContractFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContractFinishedActionPerformed(evt);
            }
        });
        jPanel1.add(ContractFinished, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1290, 280, -1));

        ProbationPeriod.setDragEnabled(true);
        ProbationPeriod.setInheritsPopupMenu(true);
        ProbationPeriod.setLabelText("Probation Period");
        ProbationPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProbationPeriodActionPerformed(evt);
            }
        });
        jPanel1.add(ProbationPeriod, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1340, 280, -1));

        WorkLocation.setDragEnabled(true);
        WorkLocation.setInheritsPopupMenu(true);
        WorkLocation.setLabelText("Work Location");
        WorkLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WorkLocationActionPerformed(evt);
            }
        });
        jPanel1.add(WorkLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1390, 280, -1));

        Basic.setDragEnabled(true);
        Basic.setInheritsPopupMenu(true);
        Basic.setLabelText("Basic");
        Basic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BasicActionPerformed(evt);
            }
        });
        jPanel1.add(Basic, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 1040, 280, -1));

        SiteAllowance.setDragEnabled(true);
        SiteAllowance.setInheritsPopupMenu(true);
        SiteAllowance.setLabelText("Site Allowance");
        SiteAllowance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SiteAllowanceActionPerformed(evt);
            }
        });
        jPanel1.add(SiteAllowance, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 1140, 280, -1));

        Meal.setDragEnabled(true);
        Meal.setInheritsPopupMenu(true);
        Meal.setLabelText("Meal");
        Meal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MealActionPerformed(evt);
            }
        });
        jPanel1.add(Meal, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 1190, 280, -1));

        OTAllowance.setDragEnabled(true);
        OTAllowance.setInheritsPopupMenu(true);
        OTAllowance.setLabelText("O/T Allowance");
        OTAllowance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OTAllowanceActionPerformed(evt);
            }
        });
        jPanel1.add(OTAllowance, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 1090, 280, -1));

        Transportation.setDragEnabled(true);
        Transportation.setInheritsPopupMenu(true);
        Transportation.setLabelText("Transportation");
        Transportation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransportationActionPerformed(evt);
            }
        });
        jPanel1.add(Transportation, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 1240, 280, -1));

        RoleAllowance.setDragEnabled(true);
        RoleAllowance.setInheritsPopupMenu(true);
        RoleAllowance.setLabelText("Role Allowance");
        RoleAllowance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoleAllowanceActionPerformed(evt);
            }
        });
        jPanel1.add(RoleAllowance, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 1290, 280, -1));

        Accomodation.setDragEnabled(true);
        Accomodation.setInheritsPopupMenu(true);
        Accomodation.setLabelText("Accomodation");
        Accomodation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccomodationActionPerformed(evt);
            }
        });
        jPanel1.add(Accomodation, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 1340, 280, -1));

        SundayHoliday.setDragEnabled(true);
        SundayHoliday.setInheritsPopupMenu(true);
        SundayHoliday.setLabelText("Sunday/Holiday");
        SundayHoliday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SundayHolidayActionPerformed(evt);
            }
        });
        jPanel1.add(SundayHoliday, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 1390, 280, -1));

        HourlyRate.setDragEnabled(true);
        HourlyRate.setInheritsPopupMenu(true);
        HourlyRate.setLabelText("Hourly Rate ");
        HourlyRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HourlyRateActionPerformed(evt);
            }
        });
        jPanel1.add(HourlyRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 1440, 280, -1));

        jLabel4.setText("Sallary Type");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1110, -1, -1));

        groupSallary.add(all);
        all.setText("All-in");
        all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allActionPerformed(evt);
            }
        });
        jPanel1.add(all, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 1110, -1, -1));

        groupSallary.add(hour);
        hour.setText("Hourly");
        jPanel1.add(hour, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 1110, -1, -1));

        buttonSelect.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buttonSelect.setForeground(new java.awt.Color(51, 51, 255));
        buttonSelect.setText("Select Employee / Pilih Karyawan");
        buttonSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSelectActionPerformed(evt);
            }
        });
        jPanel1.add(buttonSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 100, -1, 30));

        jScrollPane6.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 2142, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable7.getModel();
        int numRow = model.getRowCount();
        if (numRow < 6) {
            model.addRow(new Object[]{"", "", "", ""});
        }else{
            JOptionPane.showMessageDialog(this, "Maximal 6 Row");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable5.getModel();
        int numRow = model.getRowCount();
        if (numRow < 10) {
            model.addRow(new Object[]{"", "", "", ""});
        }else{
            JOptionPane.showMessageDialog(this, "Maximal 10 Row");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable6.getModel();
        int numRow = model.getRowCount();
        if (numRow < 5) {
            model.addRow(new Object[]{"", "", ""});
        }else{
            JOptionPane.showMessageDialog(this, "Maximal 5 Row");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable8.getModel();
        int numRow = model.getRowCount();
        if (numRow < 10) {
            model.addRow(new Object[]{"", "", "", ""});
        }else{
            JOptionPane.showMessageDialog(this, "Maximal 10 Row");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tracer();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void CandidateGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CandidateGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CandidateGenderActionPerformed

    private void CandidateBirthdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CandidateBirthdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CandidateBirthdayActionPerformed

    private void CandidateAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CandidateAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CandidateAgeActionPerformed

    private void CandidatePhoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CandidatePhoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CandidatePhoneNumberActionPerformed

    private void HiredContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HiredContractActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HiredContractActionPerformed

    private void PositionIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PositionIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PositionIDActionPerformed

    private void CompanyJoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompanyJoinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CompanyJoinActionPerformed

    private void ContractFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContractFinishedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ContractFinishedActionPerformed

    private void ProbationPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProbationPeriodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProbationPeriodActionPerformed

    private void WorkLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WorkLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WorkLocationActionPerformed

    private void BasicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BasicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BasicActionPerformed

    private void SiteAllowanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SiteAllowanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SiteAllowanceActionPerformed

    private void MealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MealActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MealActionPerformed

    private void OTAllowanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OTAllowanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OTAllowanceActionPerformed

    private void TransportationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransportationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TransportationActionPerformed

    private void RoleAllowanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoleAllowanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RoleAllowanceActionPerformed

    private void AccomodationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccomodationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AccomodationActionPerformed

    private void SundayHolidayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SundayHolidayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SundayHolidayActionPerformed

    private void HourlyRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HourlyRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HourlyRateActionPerformed

    private void allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allActionPerformed

    private void buttonSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelectActionPerformed
        CustomResource.EmployeeSession.setsesiform("Summary");
        new HumanResourceEmployeeList().setVisible(true);
    }//GEN-LAST:event_buttonSelectActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private CustomResource.CustomTextfield Accomodation;
    private CustomResource.CustomTextfield Basic;
    private CustomResource.CustomTextfield CandidateAge;
    private CustomResource.CustomTextfield CandidateBirthday;
    private CustomResource.CustomTextfield CandidateCareer;
    private CustomResource.CustomTextfield CandidateDiscipline;
    private CustomResource.CustomTextfield CandidateEducation;
    private CustomResource.CustomTextfield CandidateEmail;
    private CustomResource.CustomTextfield CandidateGender;
    private CustomResource.CustomTextfield CandidateGrade;
    private CustomResource.CustomTextfield CandidateKTP;
    private CustomResource.CustomTextfield CandidateMarital;
    private CustomResource.CustomTextfield CandidateName;
    private CustomResource.CustomTextfield CandidatePhoneNumber;
    private CustomResource.CustomTextfield CandidatePosition;
    private CustomResource.CustomTextfield CandidateReligion;
    private CustomResource.CustomTextfield CandidateSallary;
    private CustomResource.CustomTextfield CompanyJoin;
    private CustomResource.CustomTextfield ContractFinished;
    private CustomResource.CustomTextfield HiredContract;
    private CustomResource.CustomTextfield HourlyRate;
    private CustomResource.CustomTextfield Meal;
    private CustomResource.CustomTextfield OTAllowance;
    private CustomResource.CustomTextfield PositionID;
    private CustomResource.CustomTextfield ProbationPeriod;
    private CustomResource.CustomTextfield RoleAllowance;
    private CustomResource.CustomTextfield SiteAllowance;
    private CustomResource.CustomTextfield SundayHoliday;
    private CustomResource.CustomTextfield Transportation;
    private CustomResource.CustomTextfield TypeHired;
    private CustomResource.CustomTextfield WorkLocation;
    private CustomResource.RadioButtonCustom all;
    private javax.swing.JButton buttonSelect;
    private com.raven.datechooser.DateChooser dateChooser1;
    private javax.swing.ButtonGroup groupSallary;
    private CustomResource.RadioButtonCustom hour;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    // End of variables declaration//GEN-END:variables
    private void MyWindow() {
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(screen.width, screen.height - 45);
        this.setPreferredSize(new Dimension(screen.width, screen.height - 100));
    }
    
    private void tracer(){
        all.setActionCommand("All-in");
        hour.setActionCommand("Hourly");
        String templateFilePath = "src/Doc/Summary Status.xlsx";

        String name = CandidateName.getText();
        String birthday = CandidateBirthday.getText();
        String ktp = CandidateKTP.getText();
        String education = CandidateEducation.getText();
        String phone = CandidatePhoneNumber.getText();
        String sallary = CandidateSallary.getText();
        String gender = CandidateGender.getText();
        String age = CandidateGender.getText();
        String discipline = CandidateDiscipline.getText();
        String position = CandidatePosition.getText();
        String mariage = CandidateMarital.getText();
        String grade = CandidateGrade.getText();
        String email = CandidateEmail.getText();
        String career = CandidateCareer.getText();
        ButtonModel typeSallary = groupSallary.getSelection();
//        String  = .getText();

        try {
            FileInputStream templateFile = new FileInputStream(templateFilePath);
            Workbook workbook = new XSSFWorkbook(templateFile);
            
            Sheet sheet = workbook.getSheet("Sheet1");
            
            Cell cellC5 = sheet.getRow(4).getCell(2);
            Cell cellC6 = sheet.getRow(5).getCell(2);
            Cell cellC7 = sheet.getRow(6).getCell(2);
            Cell cellC8 = sheet.getRow(7).getCell(3);
            Cell cellC9 = sheet.getRow(8).getCell(3);
            Cell cellC10 = sheet.getRow(9).getCell(2);
            Cell cellC11 = sheet.getRow(10).getCell(3);
            
            Cell cellG5 = sheet.getRow(4).getCell(6);
            Cell cellG6 = sheet.getRow(5).getCell(6);
            Cell cellG7 = sheet.getRow(6).getCell(6);
            Cell cellG8 = sheet.getRow(7).getCell(6);
            Cell cellG9 = sheet.getRow(8).getCell(6);
            Cell cellG10 = sheet.getRow(9).getCell(6);
            
            cellC5.setCellValue(name + " | Gender :" + gender);
            cellC6.setCellValue(birthday);
            cellC7.setCellValue(ktp);
            cellC8.setCellValue(education);
            cellC9.setCellValue(education);
            cellC10.setCellValue(phone);
            cellC11.setCellValue(sallary);
            
            cellG5.setCellValue(discipline);
            cellG6.setCellValue(position);
            cellG7.setCellValue(mariage);
            cellG8.setCellValue(grade);
            cellG9.setCellValue(email);
            cellG10.setCellValue(career);
            
            sheet.getRow(51).getCell(3).setCellValue(TypeHired.getText());
            if (typeSallary != null) {
                sheet.getRow(52).getCell(3).setCellValue(groupSallary.getSelection().getActionCommand());
            }else{
                sheet.getRow(52).getCell(3).setCellValue("");
//                JOptionPane.showMessageDialog(null, "Salary type must be selected\ntipe gaji harus dipilih");
//                return;
            }
            sheet.getRow(53).getCell(3).setCellValue(HiredContract.getText());
            sheet.getRow(54).getCell(3).setCellValue(PositionID.getText());
            sheet.getRow(55).getCell(3).setCellValue(CompanyJoin.getText());
            sheet.getRow(56).getCell(3).setCellValue(ContractFinished.getText());
            sheet.getRow(57).getCell(3).setCellValue(ProbationPeriod.getText());
            sheet.getRow(58).getCell(3).setCellValue(WorkLocation.getText());
            
            sheet.getRow(52).getCell(7).setCellValue(Basic.getText());
            sheet.getRow(53).getCell(7).setCellValue(OTAllowance.getText());
            sheet.getRow(54).getCell(7).setCellValue(SiteAllowance.getText());
            sheet.getRow(55).getCell(7).setCellValue(Meal.getText());
            sheet.getRow(56).getCell(7).setCellValue(Transportation.getText());
            sheet.getRow(57).getCell(7).setCellValue(RoleAllowance.getText());
            sheet.getRow(58).getCell(7).setCellValue(Accomodation.getText());
            sheet.getRow(59).getCell(7).setCellValue(SundayHoliday.getText());
            sheet.getRow(60).getCell(7).setCellValue(HourlyRate.getText());
            
            DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
            int rowCount3 = model3.getRowCount();
            for (int i = 0; i < rowCount3; i++) {
                boolean isChecked3 = (boolean) model3.getValueAt(i, 2);
                if (isChecked3 == true) {
                    String description2 = (String) model3.getValueAt(i, 1);
                    sheet.getRow(15+i).getCell(2).setCellValue(description2);
                    sheet.getRow(15+i).getCell(3).setCellValue("Yes");
                }else{
                    String description2 = (String) model3.getValueAt(i, 1);
                    sheet.getRow(15+i).getCell(2).setCellValue(description2);
                    sheet.getRow(15+i).getCell(3).setCellValue("No");
                }
            }
            
            DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
            int rowCount1 = model1.getRowCount();
            for (int i = 0; i < rowCount1; i++) {
                String description = (String) model1.getValueAt(i, 1);
                String description2 = (String) model1.getValueAt(i, 2);
                sheet.getRow(15+i).getCell(6).setCellValue(description);
                sheet.getRow(15+i).getCell(7).setCellValue(description2);
            }
            
            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            int rowCount2 = model2.getRowCount();
            for (int i = 0; i < rowCount2; i++) {
                boolean isChecked2 = (boolean) model2.getValueAt(i, 1);
                if (isChecked2 == true) {
                    sheet.getRow(24+i).getCell(3).setCellValue("✓");
                }else{
                    sheet.getRow(24+i).getCell(3).setCellValue("");
                }
            }
            
            DefaultTableModel model4 = (DefaultTableModel) jTable4.getModel();
            int rowCount4 = model4.getRowCount();
            for (int i = 0; i < rowCount4; i++) {
                boolean isChecked4 = (boolean) model4.getValueAt(i, 1);
                if (isChecked4 == true) {
                    sheet.getRow(24+i).getCell(7).setCellValue("✓");
                }else{
                    sheet.getRow(24+i).getCell(7).setCellValue("");
                }
            }
            
            DefaultTableModel model5 = (DefaultTableModel) jTable5.getModel();
            int rowCount5 = model5.getRowCount();
            for (int i = 0; i < rowCount5; i++) {
                String description = (String) model5.getValueAt(i, 0);
                String description1 = (String) model5.getValueAt(i, 1);
                String description2 = (String) model5.getValueAt(i, 2);
                String description3 = (String) model5.getValueAt(i, 3);
                sheet.getRow(34+i).getCell(1).setCellValue(description);
                sheet.getRow(34+i).getCell(3).setCellValue(description1);
                sheet.getRow(34+i).getCell(5).setCellValue(description2);
                sheet.getRow(34+i).getCell(7).setCellValue(description3);
            }
            
            DefaultTableModel model6 = (DefaultTableModel) jTable6.getModel();
            int rowCount6 = model6.getRowCount();
            for (int i = 0; i < rowCount6; i++) {
                String description = (String) model6.getValueAt(i, 0);
                String description1 = (String) model6.getValueAt(i, 1);
                String description2 = (String) model6.getValueAt(i, 2);
                sheet.getRow(64+i).getCell(1).setCellValue(description);
                sheet.getRow(64+i).getCell(3).setCellValue(description1);
                sheet.getRow(64+i).getCell(5).setCellValue(description2);
            }
            
            DefaultTableModel model7 = (DefaultTableModel) jTable7.getModel();
            int rowCount7 = model7.getRowCount();
            for (int i = 0; i < rowCount7; i++) {
                String description = (String) model7.getValueAt(i, 0);
                String description1 = (String) model7.getValueAt(i, 1);
                String description2 = (String) model7.getValueAt(i, 2);
                String description3 = (String) model7.getValueAt(i, 3);
                sheet.getRow(72+i).getCell(1).setCellValue(description);
                sheet.getRow(72+i).getCell(3).setCellValue(description1);
                sheet.getRow(72+i).getCell(5).setCellValue(description2);
                sheet.getRow(72+i).getCell(6).setCellValue(description3);
            }
            
            DefaultTableModel model8 = (DefaultTableModel) jTable8.getModel();
            int rowCount8 = model8.getRowCount();
            for (int i = 0; i < rowCount8; i++) {
                String description = (String) model8.getValueAt(i, 0);
                String description1 = (String) model8.getValueAt(i, 1);
                String description2 = (String) model8.getValueAt(i, 2);
                String description3 = (String) model8.getValueAt(i, 3);
                String description4 = (String) model8.getValueAt(i, 4);
                sheet.getRow(84+i).getCell(1).setCellValue(description);
                sheet.getRow(84+i).getCell(3).setCellValue(description1);
                sheet.getRow(84+i).getCell(5).setCellValue(description2);
                sheet.getRow(84+i).getCell(6).setCellValue(description3);
                sheet.getRow(84+i).getCell(7).setCellValue(description4);
            }
            
            templateFile.close();

            JnaFileChooser fileChooser = new JnaFileChooser();
            fileChooser.setTitle("Simpan File Output");
            fileChooser.addFilter("Excel Files", "xlsx");
            boolean userSelection = fileChooser.showSaveDialog(null);

            if (userSelection) {
                File outputFile = fileChooser.getSelectedFile();
                String outputFilePath = outputFile.getAbsolutePath();
                if (!outputFilePath.toLowerCase().endsWith(".xlsx")) {
                    outputFilePath += ".xlsx";
                    outputFile = new File(outputFilePath);
                }
                int count = 1;
                while (outputFile.exists()) {
                    String newFileName = outputFile.getName().replaceFirst("[.][^.]+$", "") + "(" + count + ")"
                            + outputFile.getName().substring(outputFile.getName().lastIndexOf("."));
                    String parentDirectory = outputFile.getParent();
                    outputFilePath = parentDirectory + File.separator + newFileName;
                    outputFile = new File(outputFilePath);
                    count++;
                }

                FileOutputStream outputFileStream = new FileOutputStream(outputFile);
                workbook.write(outputFileStream);
                workbook.close();
                outputFileStream.close();

                System.out.println("Data berhasil dimasukkan ke dalam template Excel.");
                System.out.println("File output: " + outputFilePath);
            } else {
                System.out.println("Batal menyimpan file output.");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private void setTable(){
        jTable6.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int column = jTable6.getColumnModel().getColumnIndexAtX(e.getX());
                int row = e.getY() / jTable6.getRowHeight();
                if (column == 1) {
                    com.raven.datechooser.DateChooser calendar = new com.raven.datechooser.DateChooser();
                    int result = JOptionPane.showOptionDialog(
                        null,
                        calendar,
                        "Pilih Tanggal",
                        JOptionPane.OK_CANCEL_OPTION,
                        JOptionPane.PLAIN_MESSAGE,
                        null,
                        null,
                        null
                    );
                    if (result == JOptionPane.OK_OPTION) {
                        SelectedDate date = calendar.getSelectedDate();
                        String myOldDate = date.getDay() +"-"+ date.getMonth() +"-"+ date.getYear();
                        
                        DateFormat oldFormat = new SimpleDateFormat("dd-MM-yyyy");
                        DateFormat newFormat = new SimpleDateFormat("dd-MMM-yyyy");
                        
                        Date oldFormated = null;
                        try {
                            oldFormated = oldFormat.parse(myOldDate);
                        } catch (ParseException ex) {
                            Logger.getLogger(SummaryStatusCandidatEmployee.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        String newFormated = newFormat.format(oldFormated);
                        
                        jTable6.setValueAt(newFormated, row, column);
                    }
                }
            }
        });
        jTable5.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int column = jTable5.getColumnModel().getColumnIndexAtX(e.getX());
                int row = e.getY() / jTable5.getRowHeight();
                if (column == 3) {
                    com.raven.datechooser.DateChooser calendar = new com.raven.datechooser.DateChooser();
//                    calendar.
                    int result = JOptionPane.showOptionDialog(
                        null,
                        calendar,
                        "Pilih Tanggal",
                        JOptionPane.OK_CANCEL_OPTION,
                        JOptionPane.PLAIN_MESSAGE,
                        null,
                        null,
                        null
                    );
                    if (result == JOptionPane.OK_OPTION) {
                        SelectedDate date = calendar.getSelectedDate();
                        String myOldDate = date.getDay() +"-"+ date.getMonth() +"-"+ date.getYear();
                        
                        DateFormat oldFormat = new SimpleDateFormat("dd-MM-yyyy");
                        DateFormat newFormat = new SimpleDateFormat("dd-MMM-yyyy");
                        
                        Date oldFormated = null;
                        try {
                            oldFormated = oldFormat.parse(myOldDate);
                        } catch (ParseException ex) {
                            Logger.getLogger(SummaryStatusCandidatEmployee.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        String newFormated = newFormat.format(oldFormated);
                        
                        jTable5.setValueAt(newFormated, row, column);
                    }
                }
            }
        });
        jTable7.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int column = jTable7.getColumnModel().getColumnIndexAtX(e.getX());
                int row = e.getY() / jTable7.getRowHeight();
                if (column == 1) {
                    com.raven.datechooser.DateChooser calendar = new com.raven.datechooser.DateChooser();
                    int result = JOptionPane.showOptionDialog(
                        null,
                        calendar,
                        "Pilih Tanggal",
                        JOptionPane.OK_CANCEL_OPTION,
                        JOptionPane.PLAIN_MESSAGE,
                        null,
                        null,
                        null
                    );
                    if (result == JOptionPane.OK_OPTION) {
                        SelectedDate date = calendar.getSelectedDate();
                        String myOldDate = date.getDay() +"-"+ date.getMonth() +"-"+ date.getYear();
                        
                        DateFormat oldFormat = new SimpleDateFormat("dd-MM-yyyy");
                        DateFormat newFormat = new SimpleDateFormat("dd-MMM-yyyy");
                        
                        Date oldFormated = null;
                        try {
                            oldFormated = oldFormat.parse(myOldDate);
                        } catch (ParseException ex) {
                            Logger.getLogger(SummaryStatusCandidatEmployee.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        String newFormated = newFormat.format(oldFormated);
                        
                        jTable7.setValueAt(newFormated, row, column);
                    }
                }
            }
        });
        jTable8.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int column = jTable8.getColumnModel().getColumnIndexAtX(e.getX());
                int row = e.getY() / jTable8.getRowHeight();
                if (column == 1) {
                    com.raven.datechooser.DateChooser calendar = new com.raven.datechooser.DateChooser();
                    int result = JOptionPane.showOptionDialog(
                        null,
                        calendar,
                        "Pilih Tanggal",
                        JOptionPane.OK_CANCEL_OPTION,
                        JOptionPane.PLAIN_MESSAGE,
                        null,
                        null,
                        null
                    );
                    if (result == JOptionPane.OK_OPTION) {
                        SelectedDate date = calendar.getSelectedDate();
                        String myOldDate = date.getDay() +"-"+ date.getMonth() +"-"+ date.getYear();
                        
                        DateFormat oldFormat = new SimpleDateFormat("dd-MM-yyyy");
                        DateFormat newFormat = new SimpleDateFormat("dd-MMM-yyyy");
                        
                        Date oldFormated = null;
                        try {
                            oldFormated = oldFormat.parse(myOldDate);
                        } catch (ParseException ex) {
                            Logger.getLogger(SummaryStatusCandidatEmployee.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        String newFormated = newFormat.format(oldFormated);
                        
                        jTable8.setValueAt(newFormated, row, column);
                    }
                }else if(column == 2){
                    com.raven.datechooser.DateChooser calendar = new com.raven.datechooser.DateChooser();
                    int result = JOptionPane.showOptionDialog(
                        null,
                        calendar,
                        "Pilih Tanggal",
                        JOptionPane.OK_CANCEL_OPTION,
                        JOptionPane.PLAIN_MESSAGE,
                        null,
                        null,
                        null
                    );
                    if (result == JOptionPane.OK_OPTION) {
                        SelectedDate date = calendar.getSelectedDate();
                        String myOldDate = date.getDay() +"-"+ date.getMonth() +"-"+ date.getYear();
                        
                        DateFormat oldFormat = new SimpleDateFormat("dd-MM-yyyy");
                        DateFormat newFormat = new SimpleDateFormat("dd-MMM-yyyy");
                        
                        Date oldFormated = null;
                        try {
                            oldFormated = oldFormat.parse(myOldDate);
                        } catch (ParseException ex) {
                            Logger.getLogger(SummaryStatusCandidatEmployee.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        String newFormated = newFormat.format(oldFormated);
                        
                        jTable8.setValueAt(newFormated, row, column);
                    }
                }
            }
        });
    }
    
    private void getData() {
        if("".equals(CustomResource.EmployeeSession.getKTPSummary())){
            
        }else{
            try {
                stm = koneksi.createStatement();
                rs = stm.executeQuery("select * from cd_employee WHERE id_employee = "+CustomResource.EmployeeSession.getKTPSummary()+"");
                while (rs.next()) {
                    CandidateName.setText(rs.getString("Nama"));
                    CandidateKTP.setText(rs.getString("KTP"));
                    CandidateGender.setText(rs.getString("sex"));
    //                CandidateAge.setText(rs.getString(""));
    //                CandidateEducation.setText(rs.getString(""));
                    CandidatePhoneNumber.setText(rs.getString("No_HP"));
    //                CandidateReligion.setText(rs.getString(""));
                    CandidateSallary.setText(rs.getString("D_Salary"));
                    CandidateDiscipline.setText(rs.getString("discipline"));
                    CandidatePosition.setText(rs.getString("Applying_A"));
                    CandidateMarital.setText(rs.getString("marital"));
    //                CandidateGrade.setText(rs.getString(""));
                    CandidateEmail.setText(rs.getString("email"));
    //                CandidateCareer.setText(rs.getString(""));
                }
                DefaultTableModel model5 = (DefaultTableModel) jTable5.getModel();
                int row = model5.getRowCount();
                for (int i = 0; i < row; i++) {
                    model5.removeRow(0);
                }
                rs1 = stm.executeQuery("select * from cd_certificates WHERE id_employee = "+CustomResource.EmployeeSession.getKTPSummary()+"");
                while (rs1.next()) {
                    
                    SimpleDateFormat inputFormat = new SimpleDateFormat("yyyy-MM-dd");
                    SimpleDateFormat outputFormat = new SimpleDateFormat("dd-MMM-yyyy");

                    String inputDate = rs1.getString(3);
                    Date date = inputFormat.parse(inputDate);
                    String formattedDate = outputFormat.format(date);
                    
                    String myData[] = { rs1.getString(4),
                                        rs1.getString(6),
                                        rs1.getString(7),
                                        formattedDate,};
                    model5.addRow(myData);
                    
                    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model5);
                    jTable5.setRowSorter(sorter);
                    sorter.setComparator(3, (date1, date2) -> {
                        try {
                            Date parsedDate1 = outputFormat.parse(date1.toString());
                            Date parsedDate2 = outputFormat.parse(date2.toString());
                            return parsedDate1.compareTo(parsedDate2);
                        } catch (ParseException e) {
                            e.printStackTrace();
                            return 0;
                        }
                    });
                    sorter.setSortKeys(Collections.singletonList(new RowSorter.SortKey(3, SortOrder.DESCENDING)));
                    
                    
                }
                DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
                    rs2 = stm.executeQuery("select * from cd_adress WHERE id_employee = "+CustomResource.EmployeeSession.getKTPSummary()+"");
                    while (rs2.next()) {
                        String myData1[] = {rs2.getString(3),
                                            rs2.getString(4),
                                            rs2.getString(5),
                                            rs2.getString(6),
                                            rs2.getString(7)};
                        String myData2[] = {rs2.getString(9),
                                            rs2.getString(10),
                                            rs2.getString(11),
                                            rs2.getString(12),
                                            rs2.getString(13)};
                        for (int row1 = 0; row1 < myData1.length; row1++) {
                            model1.setValueAt(myData1[row1], row1, 1);
                            model1.setValueAt(myData2[row1], row1, 2);
                        }
                    }
                CustomResource.EmployeeSession.setKTPSummary("");
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    
    @Override
    public void formrefresh() {
    }
}
